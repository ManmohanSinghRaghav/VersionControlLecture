# Initialize a new Git repository
git init

# Clone an existing repository
git clone <repository-url>

# Add remote repository
git remote add origin <repository-url>

# Check repository status
git status

# Add files to staging area
git add <file-name>

# Commit changes
git commit -m "Commit message"

# View commit history
git log

# List branches
git branch

# Create new branch
git branch <branch-name>
git checkout -b <branch-name>  # Create and switch

# Switch branches
git checkout <branch-name>
git switch <branch-name>    # Modern syntax

# Merge branches
git merge <branch-name>

# Delete branch
git branch -d <branch-name>

# Fetch changes from remote
git fetch origin

# Pull changes (fetch + merge)
git pull origin <branch-name>

# Push changes
git push -u origin <branch-name>  # Set upstream

# Push all branches
git push --all

# Unstage files
git reset <file-name>

# Discard changes in working directory
git checkout -- <file-name>
git restore <file-name>     # Modern syntax

# Undo last commit (keep changes)
git reset --soft HEAD~1

# Undo last commit (discard changes)
git reset --hard HEAD~1

# Revert a commit
git revert <commit-hash>

# Stash changes
git stash
git stash push -m "Stash message"

# List stashes
git stash list

# Apply stash
git stash pop               # Apply and remove
git stash apply             # Apply but keep in stash

# Set user information
git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"

# View configuration
git config --list
git config user.name

# Show differences
git diff                    
# Show file history
git log --follow <file-name>

# Blame (see who changed what)
git blame <file-name>

# Clean untracked files
git clean -n                # Dry run
git clean -f                # Force clean
